
GO
USE master
GO
/*
GO
USE master
GO
DROP DATABASE MEOMEO11
*/
GO
CREATE DATABASE MEOMEO11
GO
USE MEOMEO11
------------------------------------------------------------------------------------------------

/*Function tạo mã khách hàng tự động tăng */
if OBJECT_ID ('AUTO_MaKH') is not null
	drop function AUTO_MaKH
GO
CREATE FUNCTION AUTO_MaKH()
RETURNS VARCHAR(5)
AS
BEGIN
	DECLARE @ID VARCHAR(5)
	IF (SELECT COUNT(MA) FROM KHACHHANG) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 3)) FROM KHACHHANG
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'KH00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'KH0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 THEN 'KH'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
-----------------------------------
/*Function tạo mã hóa đơn tự động tăng */	
if OBJECT_ID ('AUTO_MaHD') is not null
	drop function AUTO_MaHD
go
CREATE FUNCTION AUTO_MaHD()
RETURNS VARCHAR(7)
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	IF (SELECT COUNT(MA) FROM HoaDon) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 5)) FROM HoaDon
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'HD0000' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'HD000'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 and @ID <999 THEN 'HD00'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 999 and @ID <9999 THEN 'HD0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9999 THEN 'HD'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
-----------------------------------------------------
/*Function tạo mã nhân viên tự động tăng */
if OBJECT_ID ('AUTO_MaNV') is not null
	drop function AUTO_MaNV
go
CREATE FUNCTION AUTO_MaNV()
RETURNS VARCHAR(5)
AS
BEGIN
	DECLARE @ID VARCHAR(5)
	IF (SELECT COUNT(MA) FROM NhanVien) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 3)) FROM NhanVien
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'NV00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 THEN 'NV0' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
------------------------------------------------------------------------------------
/*Function tạo hang tự động tăng */	
if OBJECT_ID ('AUTO_MaHA') is not null
	drop function AUTO_MaHA
go
CREATE FUNCTION AUTO_MaHA()
RETURNS VARCHAR(7)
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	IF (SELECT COUNT(MA) FROM HANG) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 5)) FROM HANG
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'HA0000' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'HA000'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 and @ID <999 THEN 'HA00'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 999 and @ID <9999 THEN 'HA0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9999 THEN 'HA'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO

------------------------------------------------------------------------------------
/*Function tạo mã kiểu dáng tự động tăng */	
if OBJECT_ID ('AUTO_MaKD') is not null
	drop function AUTO_MaKD
go
CREATE FUNCTION AUTO_MaKD()
RETURNS VARCHAR(7)
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	IF (SELECT COUNT(MA) FROM KIEUDANG) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 5)) FROM KIEUDANG
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'KD0000' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'KD000'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 and @ID <999 THEN 'KD00'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 999 and @ID <9999 THEN 'KD0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9999 THEN 'KD'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
------------------------------------------------------------------------------------
/*Function tạo mã danh mục tự động tăng */	
if OBJECT_ID ('AUTO_MaDM') is not null
	drop function AUTO_MaDM
go
CREATE FUNCTION AUTO_MaDM()
RETURNS VARCHAR(7)
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	IF (SELECT COUNT(MA) FROM DANHMUC) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 5)) FROM DANHMUC
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'DM0000' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'DM000'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 and @ID <999 THEN 'DM00'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 999 and @ID <9999 THEN 'DM0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9999 THEN 'DM'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
------------------------------------------------------------------------------------
/*Function tạo mã màu sắc tự động tăng */	
if OBJECT_ID ('AUTO_MaMS') is not null
	drop function AUTO_MaMS
go
CREATE FUNCTION AUTO_MaMS()
RETURNS VARCHAR(7)
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	IF (SELECT COUNT(MA) FROM MAUSAC) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 5)) FROM MAUSAC
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'MS0000' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'MS000'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 and @ID <999 THEN 'MS00'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 999 and @ID <9999 THEN 'MS0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9999 THEN 'MS'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
------------------------------------------------------------------------------------
/*Function tạo mã kích cỡ tự động tăng */	
if OBJECT_ID ('AUTO_MaKC') is not null
	drop function AUTO_MaKC
go
CREATE FUNCTION AUTO_MaKC()
RETURNS VARCHAR(7)
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	IF (SELECT COUNT(MA) FROM KICHCO) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 5)) FROM KICHCO
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'KC0000' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'KC000'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 and @ID <999 THEN 'KC00'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 999 and @ID <9999 THEN 'KC0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9999 THEN 'KC'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
------------------------------------------------------------------------------------
/*Function tạo mã giày tự động tăng */	
if OBJECT_ID ('AUTO_MaGI') is not null
	drop function AUTO_MaGI
go
CREATE FUNCTION AUTO_MaGI()
RETURNS VARCHAR(7)
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	IF (SELECT COUNT(MA_GIAY) FROM GIAY) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA_GIAY, 5)) FROM GIAY
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'G0000' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'G000'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 and @ID <999 THEN 'G00'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 999 and @ID <9999 THEN 'G0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9999 THEN 'G'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
------------------------------------------------------------------------------------
/*Function tạo mã giày chi tiết tự động tăng */	
if OBJECT_ID ('AUTO_MaGCT') is not null
	drop function AUTO_MaGCT
go
CREATE FUNCTION AUTO_MaGCT()
RETURNS VARCHAR(7)
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	IF (SELECT COUNT(MA) FROM GIAYCHITIET) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MA, 5)) FROM GIAYCHITIET
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'CT0000' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 and @ID <99 THEN 'CT000'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 99 and @ID <999 THEN 'CT00'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 999 and @ID <9999 THEN 'CT0'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9999 THEN 'CT'+ CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
------------------------------------------------------------------------------------
GO
CREATE TABLE HANG
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    MA VARCHAR(7) CONSTRAINT MAHA DEFAULT [dbo].[AUTO_MaHA]() UNIQUE,
    [NAME] NVARCHAR(80) NOT NULL,
    NGAYTAO BIGINT NOT NULL
);

GO
CREATE TABLE KIEUDANG
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    MA VARCHAR(7) CONSTRAINT MAKD DEFAULT [dbo].[AUTO_MaKD]() UNIQUE,
    [NAME] NVARCHAR(80) NOT NULL,
    NGAYTAO BIGINT NOT NULL
);

GO
CREATE TABLE DANHMUC
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    MA VARCHAR(7) CONSTRAINT MADM DEFAULT [dbo].[AUTO_MaDM]() UNIQUE,
    [NAME] NVARCHAR(80) NOT NULL,
    NGAYTAO BIGINT NOT NULL
);

GO
CREATE TABLE MAUSAC
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    MA VARCHAR(7) CONSTRAINT MAMS DEFAULT [dbo].[AUTO_MaMS]() UNIQUE,
    [NAME] NVARCHAR(80) NOT NULL,
    NGAYTAO BIGINT NOT NULL
);

GO
CREATE TABLE KICHCO
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    MA VARCHAR(7) CONSTRAINT MAKC DEFAULT [dbo].[AUTO_MaKC]() UNIQUE,
    [NAME] NVARCHAR(80) NOT NULL,
    NGAYTAO BIGINT NOT NULL
);

GO
CREATE TABLE GIAY
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    MA_GIAY VARCHAR(7) CONSTRAINT MAGI DEFAULT [dbo].[AUTO_MaGI]() UNIQUE,
    [NAME] NVARCHAR(80) NOT NULL,
    NGAYTAO BIGINT NOT NULL
);

GO
CREATE TABLE GIAYCHITIET
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    MA VARCHAR(10) CONSTRAINT MAGCT DEFAULT [dbo].AUTO_MaGCT() UNIQUE,
    ID_GIAY UNIQUEIDENTIFIER NOT NULL,
    ID_HANG UNIQUEIDENTIFIER NOT NULL,
    ID_KIEUDANG UNIQUEIDENTIFIER NOT NULL,
    ID_DANHMUC UNIQUEIDENTIFIER NOT NULL,
    ID_MAUSAC UNIQUEIDENTIFIER NOT NULL,
    ID_KICHCO UNIQUEIDENTIFIER NOT NULL,
	HINHANH NVARCHAR(225) NOT NULL,
    GIA DECIMAL(20, 2) NOT NULL,
    SOLUONG INT NOT NULL,
    NGAYTAO BIGINT NOT NULL,
    TRANGTHAI NVARCHAR(20) NOT NULL,
    MOTA NVARCHAR(225),
);


GO
CREATE TABLE HOADONCHITIET
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ID_GIAYCT UNIQUEIDENTIFIER,
    ID_HOADON UNIQUEIDENTIFIER,
    GIA DECIMAL(20, 2) not null,
    SOLUONG INT not null,
    TRANGTHAI NVARCHAR(50),
);

GO
GO
CREATE TABLE [dbo].[KHACHHANG](
	[ID] [uniqueidentifier] Primary key default newid() NOT NULL,
	[MA] [varchar](10)  CONSTRAINT MAKH DEFAULT [dbo].[AUTO_MaKH]() NOT NULL,
	[TEN] [nvarchar](50) NULL,
	[GIOITINH] [bit] NULL,
	[SDT] [varchar](12) NULL,
	[DIACHI] [nvarchar](225) NULL,
    Email varchar(255)
	);
GO
GO
CREATE TABLE [dbo].[HOADON](
	[ID] [uniqueidentifier] PRIMARY KEY DEFAULT NEWID()NOT NULL,
	[MA] [varchar](50)  CONSTRAINT MAHD DEFAULT [dbo].[AUTO_MaHD]() NOT NULL,
	[ID_VOUCHER] [uniqueidentifier] NULL,
	[ID_NHANVIEN] [uniqueidentifier] NULL,
	[ID_KHACHHANG] [uniqueidentifier] NULL,
	[NGAYTAO] [datetime] default getdate() NULL,
	[TONGTIEN] [decimal](20, 2) NULL,
	[TRANGTHAI] [nvarchar](50) NULL,
	[TIENKHACHDUA] [decimal](20, 2) NULL,
	[TIENTHUA] [decimal](20, 2) NULL,
	[HINHTHUCTHANHTOAN] [nvarchar](50) NULL,
	);

GO
CREATE TABLE VOUCHER
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    GIATRI DECIMAL(20, 2),
    MAGIAMGIA VARCHAR(12) UNIQUE,
    DIEUKIEN DECIMAL(20, 2),
    SOLUONG INT,
    NGAYBD BIGINT,
    NGAYKT BIGINT,
    LOAI NVARCHAR(20),
    NGAYTAO BIGINT,
    TRANGTHAI NVARCHAR(50)
);
--select ID, GIATRI, MAGIAMGIA, DIEUKIEN, SOLUONG, NGAYBD, NGAYKT, LOAI, NGAYTAO, TRANGTHAI from VOUCHER ORDER BY NGAYTAO DESC
--INSERT INTO VOUCHER (MAGIAMGIA, GIATRI, DIEUKIEN, SOLUONG, NGAYBD, NGAYKT, LOAI, NGAYTAO, TRANGTHAI) VALUES ('SDFBSDF', 10, , 99, 1701505828, 1701511828, 'phanTram', 1701506027, N'Đang diễn ra')
GO
-- Tạo bảng NHANVIEN
CREATE TABLE NHANVIEN
(
    ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	MA VARCHAR(50) CONSTRAINT MANV DEFAULT [dbo].[AUTO_MaNV]() not null,
    TEN NVARCHAR(50),
    GIOITINH BIT,
    SDT VARCHAR(12),
    DIACHI NVARCHAR(225),
    NGAYSINH DATE,
    MATKHAU VARCHAR(20),
    VAITRO NVARCHAR(20),	
    TRANGTHAI NVARCHAR(50)
);

GO
ALTER TABLE GIAYCHITIET ADD CONSTRAINT FK_CHITIET_GIAY FOREIGN KEY (ID_GIAY) REFERENCES GIAY(ID)

ALTER TABLE GIAYCHITIET ADD CONSTRAINT FK_CHITIET_HANG FOREIGN KEY (ID_HANG) REFERENCES HANG(ID)

ALTER TABLE GIAYCHITIET ADD CONSTRAINT FK_CHITIET_KIEUDANG FOREIGN KEY (ID_KIEUDANG) REFERENCES KIEUDANG(ID)

ALTER TABLE GIAYCHITIET ADD CONSTRAINT FK_CHITIET_DANHMUC FOREIGN KEY (ID_DANHMUC) REFERENCES DANHMUC(ID)

ALTER TABLE GIAYCHITIET ADD CONSTRAINT FK_CHITIET_MAUSAC FOREIGN KEY (ID_MAUSAC) REFERENCES MAUSAC(ID)

ALTER TABLE GIAYCHITIET ADD CONSTRAINT FK_CHITIET_KICHCO FOREIGN KEY (ID_KICHCO) REFERENCES KICHCO(ID)

GO
ALTER TABLE HOADONCHITIET ADD CONSTRAINT FK_HDCHITIET_GIAYCT FOREIGN KEY (ID_GIAYCT) REFERENCES GIAYCHITIET(ID) ON UPDATE CASCADE

ALTER TABLE HOADONCHITIET ADD CONSTRAINT FK_HDCHITIET_HOADON FOREIGN KEY (ID_HOADON) REFERENCES HOADON(ID) ON UPDATE CASCADE
ON DELETE CASCADE

GO
ALTER TABLE HOADON ADD CONSTRAINT FK_HOADON_KHACHHANG FOREIGN KEY (ID_KHACHHANG) REFERENCES KHACHHANG(ID) ON UPDATE CASCADE

ALTER TABLE HOADON ADD CONSTRAINT FK_HOADON_VOUCHER FOREIGN KEY (ID_VOUCHER) REFERENCES VOUCHER(ID)

ALTER TABLE HOADON ADD CONSTRAINT FK_HOADON_NHANVIEN FOREIGN KEY (ID_NHANVIEN) REFERENCES NHANVIEN(ID) ON UPDATE CASCADE
---------------
IF OBJECT_ID('sp_TongTienHoaDonTheoNgay') IS NOT NULL
    DROP PROCEDURE sp_TongTienHoaDonTheoNgay
GO

CREATE PROCEDURE sp_TongTienHoaDonTheoNgay
    @Ngay date
AS
BEGIN
    BEGIN TRY
        SELECT
            SUM(TONGTIEN) AS TongTien
        FROM
            HOADON
        WHERE
            CONVERT(date, NGAYTAO) = @Ngay;
    END TRY
    BEGIN CATCH
        -- Xử lý lỗi ở đây, ghi chú chúng hoặc đưa ra một ngoại lệ phù hợp
        PRINT ERROR_MESSAGE()
    END CATCH
END
EXEC [sp_ThongKeGiayChiTietTheoNgay] '2023-12-14'

GO

------------------
-- Thêm dữ liệu mẫu vào bảng KHACHHANG
INSERT INTO KHACHHANG (MA, TEN, GIOITINH, SDT, DIACHI) VALUES ('KH000',N'Khách vãng lai', 0, '0000000000', N'Không xác định')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'Nguyễn Văn A',0,'0914162689',N'An Giang','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'Lê Thị Thanh An',1,'0369788679',N'Bà Rịa – Vũng Tàu','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'Nguyễn Phương Anh',1,'0978178764',N'Bạc Liêu','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'Phạm Giang Linh',1,'0979809204',N'Bắc Giang','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'Lều Ngọc An',0,'0905682529',N'Bắc Kạn','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'	Nguyễn Ngọc Trâm Anh',1,'0982725726',N'Bắc Ninh','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'	Phạm Việt Anh',0,'0937303282',N'Bến Tre','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'	Nguyễn Đức Huy',0,'0974131489',N'Bình Dương','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'	Nguyễn Trung Kiên',0,'0984084034',N'Bình Định','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'	Nguyễn Minh Khuê',1,'0977557349',N'Bình Phước','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'Nguyễn Hà Gia Linh',1,'0986958908',N'Bình Thuận','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'	Bùi Hải Lâm',0,'0349616718',N'Cà Mau','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'Hoàng Hương Ly',1,'0372389777',N'Cao Bằng','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'	Hoàng Yến Nhi',1,'0976096113',N'Cần Thơ','phuclxph32090@fpt.edu.vn')
insert into KHACHHANG values(NEWID(),dbo.AUTO_MaKH(),N'	Trịnh Xuân Minh',0,'0912992158',N'Đà Nẵng','phuclxph32090@fpt.edu.vn')

GO

-- Thêm dữ liệu mẫu vào bảng NHANVIEN
INSERT INTO NHANVIEN VALUES(newid(), 'NV000', N'Im Admin', 0, '0357250763', N'System Meo Meo', CAST('2004-10-27' AS Date), '12345', N'Admin', N'Hoạt động');
INSERT INTO NHANVIEN VALUES(newid(), dbo.AUTO_MaNV(), N'Nguyễn Hoài Nam', 0, '0876546678', N'Hà Nam', CAST('1999-08-27' AS Date), '12345', N'Staff', N'Hoạt động');
INSERT INTO NHANVIEN VALUES(newid(), dbo.AUTO_MaNV(), N'Lê Xuân Phúc', 0, '0876546678', N'Hà Bắc', CAST('2001-09-30' AS Date), '12345', N'Staff', N'Hoạt động');
INSERT INTO NHANVIEN VALUES(newid(), dbo.AUTO_MaNV(), N'Nguyễn Văn Việt', 0, '0876546678', N'Hà Nội', CAST('2002-10-30' AS Date), '12345', N'Staff', N'Hoạt động');
INSERT INTO NHANVIEN VALUES(newid(), dbo.AUTO_MaNV(), N'Hòa Quang Thức', 0, '0876546678', N'Hà Tây', CAST('2003-10-27' AS Date), '12345', N'Staff', N'Hoạt động');
INSERT INTO NHANVIEN VALUES(newid(), dbo.AUTO_MaNV(), N'Lâm Văn Tâm', 0, '0876546678', N'Hà Đông', CAST('2004-05-28' AS Date), '12345', N'Staff', N'Hoạt động');
INSERT INTO NHANVIEN VALUES(newid(), dbo.AUTO_MaNV(), N'Vũ Trọng Hùng', 0, '0876546678', N'Nam Định', CAST('1996-06-06' AS Date), '12345', N'Staff', N'Hoạt động');
INSERT INTO NHANVIEN VALUES(newid(), dbo.AUTO_MaNV(), N'Đinh Thị Thu', 1, '0876546678', N'Hưng Yên', CAST('1995-12-02' AS Date), '12345', N'Staff', N'Hoạt động');

GO

-- Thêm dữ liệu mẫu vào bảng GIAY
INSERT INTO GIAY (ID, [NAME], NGAYTAO) VALUES ('D6DBE17B-669C-4B13-8F21-99CD90089AA9', N'Giày Thể Thao A', 1700932434)
INSERT INTO GIAY (ID, [NAME], NGAYTAO) VALUES ('88A790DA-E80B-43DA-BD48-A6497E012DEE', N'Giày Cao Gót B', 1700932435)
INSERT INTO GIAY (ID, [NAME], NGAYTAO) VALUES ('549C3DD6-0CFB-49C8-83F9-BFE8B6CB2B2B', N'Giày Sneaker C', 1700932436)
INSERT INTO GIAY (ID, [NAME], NGAYTAO) VALUES ('A34A7763-EE94-4039-A8E8-BD66FE7372D5', N'Giày Sandal D', 1700932437)
INSERT INTO GIAY (ID, [NAME], NGAYTAO) VALUES ('70A00EE6-66C7-41D0-BF06-6CF3A8DBB492', N'Giày Bốt E', 1700932438)

-- Thêm dữ liệu mẫu vào bảng HANG    
INSERT INTO HANG (ID, [NAME], NGAYTAO) VALUES('C9ACC576-5459-4189-993B-1C8312ED8441', N'Puma', 1700932434)
INSERT INTO HANG (ID, [NAME], NGAYTAO) VALUES('E87F5F2F-E1A6-4D61-A478-65934CDAA666', N'Nike', 1700932435)
INSERT INTO HANG (ID, [NAME], NGAYTAO) VALUES('DB4C8C88-5256-446F-9C93-83D7CD9239A2', N'Converse', 1700932436)
INSERT INTO HANG (ID, [NAME], NGAYTAO) VALUES('1AE88BAF-2C08-44F7-BDA0-9B78186E03FB', N'Van', 1700932437)
INSERT INTO HANG (ID, [NAME], NGAYTAO) VALUES('A48C8680-4582-4319-BD4A-A7D0C6B74D0E', N'Supreme', 1700932438)

-- Thêm dữ liệu mẫu vào bảng KIEUDANG    
INSERT INTO KIEUDANG (ID, [NAME], NGAYTAO) VALUES('0869731D-3E17-4E1A-A442-0D3AFE01DD38', N'Cổ cao', 1700932434)
INSERT INTO KIEUDANG (ID, [NAME], NGAYTAO) VALUES('D1EAEF58-BD87-4CC4-B9B9-253CB417B9EB', N'Cổ thấp', 1700932435)
INSERT INTO KIEUDANG (ID, [NAME], NGAYTAO) VALUES('9238C75B-8647-4A24-93B8-3E7708475287', N'Đế cao', 1700932436)
INSERT INTO KIEUDANG (ID, [NAME], NGAYTAO) VALUES('C4A308F1-9211-4509-9BD4-533AC13D426D', N'Đế thấp', 1700932437)
INSERT INTO KIEUDANG (ID, [NAME], NGAYTAO) VALUES('8E3A6455-2EA3-4D74-8A86-5D564AD46582', N'Không đế', 1700932438)
-- Thêm dữ liệu mẫu vào bảng DANHMUC    
INSERT INTO DANHMUC (ID, [NAME], NGAYTAO) VALUES('DE0D312A-6B70-45B4-860B-06B160C06841', N'Da bò', 1700932434)
INSERT INTO DANHMUC (ID, [NAME], NGAYTAO) VALUES('D2FDB35F-AADB-4324-9049-137CA2A7AA40', N'Da cá sấu', 1700932435)
INSERT INTO DANHMUC (ID, [NAME], NGAYTAO) VALUES('E7EDED71-9E80-4521-BFB1-4CAA49EAB31C', N'Giả da', 1700932436)
INSERT INTO DANHMUC (ID, [NAME], NGAYTAO) VALUES('AADA70EF-A755-4582-9FE0-D399FF954538', N'Vải', 1700932437)
INSERT INTO DANHMUC (ID, [NAME], NGAYTAO) VALUES('3FAAF7E9-6B3D-4D55-92FE-DD8524D99DF2', N'Lông thú', 1700932438)
-- Thêm dữ liệu mẫu vào bảng MAUSAC    
INSERT INTO MAUSAC (ID, [NAME], NGAYTAO) VALUES('30640204-A634-476C-ACEF-0DBA90D332CF', N'Vàng', 1700932434)
INSERT INTO MAUSAC (ID, [NAME], NGAYTAO) VALUES('C93E9296-7B2D-4E9D-A4A0-2F1BBAEC60F9', N'Đỏ', 1700932435)
INSERT INTO MAUSAC (ID, [NAME], NGAYTAO) VALUES('69057F1B-AD30-4C7A-9662-85A8A418CD94', N'Xám', 1700932436)
INSERT INTO MAUSAC (ID, [NAME], NGAYTAO) VALUES('3053F584-C3F9-4677-9805-8FBAD71ECAA7', N'Đen', 1700932437)
INSERT INTO MAUSAC (ID, [NAME], NGAYTAO) VALUES('5C856F53-5A98-4F9C-9E4D-BEE1A077AC0C', N'Trắng', 1700932438)

-- Thêm dữ liệu mẫu vào bảng KICHCO    
INSERT INTO KICHCO (ID, [NAME], NGAYTAO) VALUES('2F57361E-8D01-42C6-84FD-4173DBF829A7', 42, 1700932434)
INSERT INTO KICHCO (ID, [NAME], NGAYTAO) VALUES('C4589076-1834-47C7-8846-93BE2750FC26', 41, 1700932435)
INSERT INTO KICHCO (ID, [NAME], NGAYTAO) VALUES('E56A4819-F131-41F7-AE52-AF42F97E5237', 43, 1700932436)
INSERT INTO KICHCO (ID, [NAME], NGAYTAO) VALUES('DF38ED8E-C6E4-43D7-864A-B359F33A805A', 40, 1700932437)
INSERT INTO KICHCO (ID, [NAME], NGAYTAO) VALUES('E5A84B1D-5BDD-48BC-97C2-DCC14E10B926', 44, 1700932438)


select * from nhanvien
select * from KHACHHANG

sELECT * FROM HANG
sELECT * FROM KIEUDANG
sELECT * FROM DANHMUC	
sELECT * FROM MAUSAC
sELECT * FROM KICHCO
sELECT * FROM GIAY
sELECT * FROM HOADONCHITIET
sELECT * FROM KHACHHANG
sELECT * FROM HOADON
sELECT * FROM VOUCHER
sELECT * FROM NHANVIEN 

--/* Cập nhật trạng thái giày chi tiết khi còn hàng ,hết hàng*/
--IF OBJECT_ID ('trg_CapNhatTrangThaiGiayChiTiet') IS NOT NULL
--    DROP TRIGGER trg_CapNhatTrangThaiGiayChiTiet;
--GO

--CREATE TRIGGER trg_CapNhatTrangThaiGiayChiTiet
--ON GIAYCHITIET
--AFTER UPDATE
--AS
--BEGIN
--    UPDATE gct
--    SET gct.TRANGTHAI = 
--        CASE
--            WHEN gct.SOLUONG = 0 THEN N'Hết hàng'
--            WHEN gct.SOLUONG > 0 THEN N'Còn hàng'
--            ELSE gct.TRANGTHAI
--        END
--    FROM GIAYCHITIET gct
--    INNER JOIN inserted i ON gct.ID = i.ID;
--END;
--GO

GO

/* cập nhật số lượng sản phẩm trong giỏ hàng (Hóa đơn chi tiết) sau khi thêm giày chi tiết vào giỏ hoặc cập nhật hóa đơn chi tiết*/
--if OBJECT_ID ('trg_ThemHDCT') is not null
--	drop trigger trg_ThemHDCT
--go

--CREATE TRIGGER trg_ThemHDCT ON HoaDonChiTiet AFTER INSERT AS 
--BEGIN
--	UPDATE GIAYCHITIET
--	SET SoLuong = gct.SoLuong -(
--		SELECT SoLuong
--		FROM inserted
--		WHERE ID = gct.ID
--	)
--	FROM GIAYCHITIET gct
--	JOIN inserted ON gct.ID = inserted.ID
--END
GO
-------------------------------------------------------------------------------------------------
/* cập nhật số lượng sản phẩm trong giỏ hảng (hóa đơn chi tiết) sau khi cập nhật hóa đơn chi tiết */
--if OBJECT_ID ('trg_SuaHDCT') is not null
--	drop trigger trg_SuaHDCT
--go

--CREATE TRIGGER trg_SuaHDCT on HoaDonChiTiet after update AS
--BEGIN
--   UPDATE GIAYCHITIET SET SoLuong = gct.SoLuong -
--	   (SELECT SoLuong FROM inserted WHERE ID = gct.ID) +
--	   (SELECT soluong FROM deleted WHERE ID = gct.ID)
--   FROM GIAYCHITIET gct 
--   JOIN deleted ON gct.ID = deleted.ID
--end
GO
-------------------------------------------------------------------------------------------------
/* cập nhật số lượng sản phẩm sau khi xóa giỏ hàng (hóa đơn chi tiết) */
--if OBJECT_ID ('trg_XoaHDCT') is not null
--	drop trigger trg_XoaHDCT
--go

--create TRIGGER trg_XoaHDCT ON HoaDonChiTiet FOR DELETE AS 
--BEGIN
--	UPDATE GIAYCHITIET
--	SET SoLuong = gct.SoLuong + (SELECT SoLuong FROM deleted WHERE ID = gct.ID)
--	FROM GIAYCHITIET gct 
--	JOIN deleted ON gct.ID = deleted.ID
--END
--GO
-------------------------------------------------------------------------------------------------------------------

create or alter proc  HuyTatCaHoaDonChiTiet
    @ID_HOADON_UNIQUEIDENTIFIER UNIQUEIDENTIFIER
AS
BEGIN
    DECLARE @TempTable TABLE (ID_GIAYCT_UNIQUEIDENTIFIER UNIQUEIDENTIFIER, SOLUONG_CAN_CONG INT)

    INSERT INTO @TempTable (ID_GIAYCT_UNIQUEIDENTIFIER, SOLUONG_CAN_CONG)
    SELECT ID_GIAYCT, SOLUONG
    FROM HOADONCHITIET
    WHERE ID_HOADON = @ID_HOADON_UNIQUEIDENTIFIER

    DELETE FROM HOADONCHITIET
    WHERE ID_HOADON = @ID_HOADON_UNIQUEIDENTIFIER	

    UPDATE GIAYCHITIET
    SET SOLUONG = SOLUONG + T.SOLUONG_CAN_CONG
    FROM GIAYCHITIET G
    INNER JOIN @TempTable T ON G.ID = T.ID_GIAYCT_UNIQUEIDENTIFIER
END
---------------------------------------------------------

GO
--DROP TRIGGER TRI_HETHANG
CREATE TRIGGER TRI_HETHANG
ON GIAYCHITIET
FOR UPDATE
AS
BEGIN
    DECLARE @SOLUONG INT;
    DECLARE @MA VARCHAR(10);
    SELECT @SOLUONG = SOLUONG FROM GIAYCHITIET;
    IF @SOLUONG <= 0
        BEGIN 
            IF NOT UPDATE(TRANGTHAI)
                UPDATE GIAYCHITIET SET TRANGTHAI = N'Hết hàng' WHERE MA = @MA
        END
    ELSE
        BEGIN 
            IF NOT UPDATE(TRANGTHAI)
                UPDATE GIAYCHITIET SET TRANGTHAI = N'Còn hàng' WHERE MA = @MA
        END
END;


GO
CREATE TRIGGER TRI_HETVOUCHER
ON VOUCHER
FOR UPDATE
AS
BEGIN
    DECLARE @SOLUONG INT;
    DECLARE @MA VARCHAR(10);
    SELECT @SOLUONG = SOLUONG FROM VOUCHER;
    IF @SOLUONG <= 0
        BEGIN 
            IF NOT UPDATE(TRANGTHAI)
                UPDATE VOUCHER SET TRANGTHAI = N'Hết voucher' WHERE MAGIAMGIA = @MA
        END
    ELSE
        BEGIN 
            IF NOT UPDATE(TRANGTHAI)
                UPDATE VOUCHER SET TRANGTHAI = N'Còn voucher' WHERE MAGIAMGIA = @MA
        END
END;

select * from HOADON
Đang hiển thị 2097967327188022617.